// Comprehensive DBML file to test all enum scenarios

// Basic enum
Enum user_status {
  active [note: 'User is active and can login']
  inactive [note: 'User is temporarily disabled']  
  suspended [note: 'User account is suspended']
  deleted [note: 'User account is marked for deletion']
}

// Enum with special characters and spaces
Enum subscription_plan {
  "Free Plan" [note: 'Basic features only']
  "Pro Plan" [note: 'Advanced features included']
  "Enterprise Plan" [note: 'Full feature set with support']
}

// Simple enum without notes
Enum priority {
  low
  medium
  high
  urgent
}

// Schema-specific enum (testing multi-schema support)
Enum v2.job_status {
  pending [note: 'Job is waiting to be processed']
  processing [note: 'Job is currently being processed']
  completed [note: 'Job completed successfully']
  failed [note: 'Job failed to complete']
  cancelled [note: 'Job was cancelled by user']
}

Table users {
  id integer [primary key, increment]
  username varchar(50) [not null, unique]
  email varchar(100) [not null, unique]
  status user_status [default: 'active', note: 'Current user status']
  subscription subscription_plan [default: 'Free Plan']
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
}

Table tasks {
  id integer [primary key, increment] 
  title varchar(200) [not null]
  description text
  priority priority [default: 'medium', note: 'Task priority level']
  assigned_to integer [ref: > users.id]
  created_at timestamp [default: `now()`]
  due_date timestamp
  
  Note: 'Task management table with priority enum'
}

Table jobs {
  id integer [primary key, increment]
  name varchar(100) [not null]
  status v2.job_status [default: 'pending']
  user_id integer [ref: > users.id]
  task_id integer [ref: > tasks.id, note: 'Optional reference to related task']
  created_at timestamp [default: `now()`]
  
  Note: 'Background job processing with schema-specific enum'
}

// Test non-enum columns for comparison
Table settings {
  id integer [primary key, increment]
  key varchar(100) [not null, unique]
  value text [note: 'This is a regular text field, not an enum']
  type varchar(20) [note: 'This looks like an enum but is just a varchar']
  created_at timestamp [default: `now()`]
}